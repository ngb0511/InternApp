@using Base.Domain.ViewModels
@model IEnumerable<MaterialMasterVM>

@{
    ViewData["Title"] = "Material Master";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="container">
    <h2>Material Master</h2>
    <hr />

    <!-- Upload File Form -->
    <form id="uploadForm" enctype="multipart/form-data">
        <div class="form-group">
            <label for="file">Upload File:</label>
            <input type="file" class="form-control-file" id="file" name="file">
        </div>
        <button type="button" class="btn btn-primary" id="uploadButton">Upload</button>
    </form>

    <hr />

    <!-- Export to Excel Button -->
    <!-- Export to Excel Button -->
    <a href="https://localhost:7083/api/MaterialMaster/ExportFile" class="btn btn-success" download>Export to Excel</a>

    <hr />

    <!-- Material Master Table -->
    <h3>Material Master List</h3>
    <table id="materialTable" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>DpName</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- Data will be dynamically populated here -->
        </tbody>
    </table>
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item"><a class="page-link" href="#" onclick="changePage('prev')">Previous</a></li>
            <!-- Pagination numbers are dynamically inserted here -->
            <li class="page-item"><a class="page-link" href="#" onclick="changePage('next')">Next</a></li>
        </ul>
    </nav>

    <!-- Add New Material Form -->
    <hr />
    <h3>Add New Material</h3>
    <form id="addForm" method="post">
        <div class="form-group">
            <label for="name">Material:</label>
            <input type="text" class="form-control" id="material" name="Material">
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <input type="text" class="form-control" id="description" name="Description">
        </div>
        <div class="form-group">
            <label for="dpName">DpName:</label>
            <input type="text" class="form-control" id="dpName" name="DpName">
        </div>
        <button type="button" class="btn btn-primary" id="addMaterialButton">Add Material</button>
    </form>


    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Material</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <div class="form-group">
                            <label for="editId">Id:</label>
                            <input type="text" class="form-control" id="editId" name="Id" readonly>
                        </div>
                        <div class="form-group">
                            <label for="editMaterial">Material:</label>
                            <input type="text" class="form-control" id="editMaterial" name="Material">
                        </div>
                        <div class="form-group">
                            <label for="editDescription">Description:</label>
                            <input type="text" class="form-control" id="editDescription" name="Description">
                        </div>
                        <div class="form-group">
                            <label for="editDpName">DpName:</label>
                            <input type="text" class="form-control" id="editDpName" name="DpName">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="saveButton">Save</button>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts {
    <script>
        var currentPage = 1;
        var pageSize = 100;
        $(document).ready(function () {
            // Fetch all materials when the page loads

            fetchMaterials(currentPage, pageSize);
            // Event handlers
            $(document).on('click', '.edit-button', function () {
                var materialId = $(this).data('material-id');
                console.log(materialId);
                editMaterial(materialId);
            });

            $('#saveButton').click(function () {
                saveMaterial();
            });

            $('#uploadForm').submit(function (e) {
                e.preventDefault();
                uploadFile();
            });
            $('#editModal').on('shown.bs.modal', function () {
                $(this).find('.close').click(function () {
                    $('#editModal').modal('hide');
                });
            });
            $('#materialTable').on('click', '.delete-button', function () {
                var materialId = $(this).data('material-id');
                console.log(materialId);
                deleteMaterial(materialId);
            });

            $(document).ready(function () {
                $('#uploadButton').on('click', uploadFile);
            });

            $('#addMaterialButton').click(function () {
                addMaterial();
            });


            function fetchMaterials(page, size) {
                var url = `https://localhost:7083/api/MaterialMaster/GetAll?pageNumber=${page}&pageSize=${size}`;
                console.log("Requesting URL:", url);  
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (data) {
                        renderMaterialList(data.materials);
                        setupPagination(data.totalRecords, page, size);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching material data:', error);
                    }
                });
            }


            function renderMaterialList(materialList) {
                var materialTable = $('#materialTable tbody');
                materialTable.empty();

                if (materialList && Array.isArray(materialList)) {  // Check if materialList is defined and is an array
                    materialList.forEach(function (material) {
                        materialTable.append(`
                            <tr>
                                <td class="material-id">${material.id}</td>
                                <td>${material.material}</td>
                                <td>${material.description}</td>
                                <td>${material.dpName}</td>
                                <td>
                                    <button class="btn btn-info" onclick="viewMaterial(${material.id})" title="View">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-warning edit-button" data-material-id="${material.id}" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-danger delete-button" data-material-id="${material.id}" title="Delete">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                            `);
                    });
                } else {
                    console.error("Received material list is undefined or not an array:", materialList);
                    // Optionally, handle empty or incorrect data gracefully, e.g., show a message in the UI
                    materialTable.append('<tr><td colspan="5">No materials found.</td></tr>');
                }
            }

            function setupPagination(totalItems, currentPage, pageSize) {
                var totalPages = Math.ceil(totalItems / pageSize);
                var pagination = $('.pagination');
                pagination.empty(); // Clear existing pagination controls

                // Append 'Previous' button
                pagination.append(`<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage('prev')">Previous</a>
            </li>`);

                // Append 'Next' button
                pagination.append(`<li class="page-item ${currentPage >= totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage('next')">Next</a>
            </li>`);
            }

            window.changePage = function (page) {
                var totalPages = 21;//Math.ceil($('#totalItems').val() / pageSize); // Ensure this value is updated from your data fetch
                
                if (page === 'prev' && currentPage > 1) {
                    currentPage -= 1;
                } else if (page === 'next' && currentPage < totalPages) {
                    currentPage += 1;
                }

                fetchMaterials(currentPage, pageSize); // Fetch materials using the new currentPage
            }




            function editMaterial(materialId) {
                $.ajax({
                    url: `https://localhost:7083/api/MaterialMaster/GetById/${materialId}`,
                    type: 'GET',
                    success: function (material) {
                        $('#editId').val(material.id);
                        $('#editMaterial').val(material.material);
                        $('#editDescription').val(material.description);
                        $('#editDpName').val(material.dpName);
                        $('#editModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        alert('Error fetching material details: ' + error);
                    }
                });
            }

            function saveMaterial() {
                var formData = $('#editForm').serializeArray();
                var dataObject = {
                    Id: $('#editId').val(),  // Make sure values are correctly parsed as integers where necessary
                    Material: parseInt($('#editMaterial').val(), 10),
                    Description: $('#editDescription').val(),
                    DpName: $('#editDpName').val()
                };

                $.ajax({
                    url: `https://localhost:7083/api/MaterialMaster/UpdateMaterialMaster/${dataObject.Id}`,
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(dataObject),  // Ensure that you are sending the dataObject directly
                    success: function (material) {
                        console.log("Received material from server:", material);
                        alert('Material updated successfully.');
                        $('#editModal').modal('hide');
                        updateMaterialRow(material);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating material:', xhr.responseText);
                        alert('Error updating material: ' + xhr.responseText);
                    }
                });


            }
            function updateMaterialRow(material) {
                console.log("Attempting to update row with ID:", material);
                var row = $('#materialTable tbody').find('tr').filter(function () {
                    return $(this).find('.material-id').text().trim() == material.id.toString().trim();
                });

                console.log("Found rows:", row.length);
                if (row.length > 0) {
                    row.find('td:eq(1)').text(material.material);
                    row.find('td:eq(2)').text(material.description);
                    row.find('td:eq(3)').text(material.dpName);
                } else {
                    console.log("No matching row found for ID:", material.Id);
                }
            }


            function deleteMaterial(id) {
                if (confirm('Are you sure you want to delete this material?')) {
                    $.ajax({
                        url: `https://localhost:7083/api/MaterialMaster/DeleteMaterialMaster/${id}`,
                        type: 'DELETE',
                        success: function (response) {
                            alert('Material deleted successfully.');
                            fetchMaterials(currentPage, pageSize);
                        },
                        error: function (xhr, status, error) {
                            alert('Error deleting material: ' + error);
                        }
                    });
                }
            }

            function uploadFile() {
                var formData = new FormData();
                var fileInput = $('#file')[0];
                var file = fileInput.files[0];

                if (!file) {
                    alert('Please select a file to upload');
                    return;
                }

                formData.append('file', file);

                $.ajax({
                    url: 'https://localhost:7083/api/MaterialMaster/UploadFile',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        alert('File uploaded successfully: ' + data);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error uploading file:', error);
                        alert('Error uploading file: ' + error);
                    }
                });
            }

            function addMaterial() {
                var formData = {
                    Material: parseInt($('#material').val(), 10), 
                    Description: $('#description').val(),
                    DpName: $('#dpName').val()
                };
                $.ajax({
                    url: 'https://localhost:7083/api/MaterialMaster/Add',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        alert('Material added successfully');
                        console.log(response);
                    },
                    error: function (xhr, status, error) {
                        alert('Error adding material: ' + error);
                        console.error(xhr.responseText);
                    }
                });
            }
        });
        

    </script>

}